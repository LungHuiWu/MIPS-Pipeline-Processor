// If module CHIP has sth wrong,
// the program will output an error message, 
// and then TestBed will notice sth wrong.
// a : # never      branch
// b : # interleave branch
// c : # always     branch

000000_00000_00000_00000_00000_000000 //0x00// nop
001000_00000_01000_0000000000001010   //0x04// addi r8  r0  0x000A           // a = 10
001000_00000_01001_0000000000010100   //0x08// addi r9  r0  0x0014           // b = 20
001000_00000_01010_0000000000011110   //0x0C// addi r10 r0  0x001E           // c = 30
001000_00000_01011_0000000000000000   //0x10// addi r11 r0  0x0000
001000_00000_01100_0000000000000000   //0x14// addi r12 r0  0x0000
001000_00000_01101_0000000000000000   //0x18// addi r13 r0  0x0000
001000_01011_01011_0000000000000001   //0x1C// addi r11 r11 0x0001           // Part_A
000100_01000_01011_0000000000000001   //0x20// beq  r8  r11 0x0001 (to 0x28) // to Part_A_end
000010_00000000000000000000000111     //0x24// j    0x0000007 (to 0x1C)      // to Part_A
000000_01000_01011_01110_00000_100010 //0x28// sub  r14 r8  r11              // Part_A_end
101011_00000_01110_0000000000000000   //0x2C// sw   r14 r0  0x0000
001000_01100_01100_0000000000000001   //0x30// addi r12 r12 0x0001           // Part_B
000101_01001_01100_0000000000000011   //0x34// bne  r9  r12 0x0003 (to 0x44) // to Part_B_end
000000_01001_01100_01110_00000_100010 //0x38// sub  r14 r9  r12
101011_00000_01110_0000000000000000   //0x3C// sw   r14 r0  0x0000
000010_00000000000000000000010100     //0x40// j    0x0000014 (to 0x50)      // to Part_C
000101_01000_01011_0000000000000001   //0x44// bne  r8  r11 0x0001 (to 0x4C) // Part_B_end, to Part_B_error
000010_00000000000000000000001100     //0x48// j    0x000000C (to 0x30)      // to Part_B
101011_00000_01000_0000000000000000   //0x4C// sw   r8  r0  0x0000           // Part_B_error
001000_01101_01101_0000000000000001   //0x50// addi r13 r13 0x0001           // Part_C
000101_01010_01101_1111111111111110   //0x54// bne  r10 r13 0xFFFE (to 0x50) // to Part_C
000000_01010_01101_01110_00000_100010 //0x58// sub  r14 r10 r13
101011_00000_01110_0000000000000000   //0x5C// sw   r14 r0  0x0000



// 000000_00000_00000_00000_00000_000000 // nop
// 001000_00000_01010_0000000110010000   // addi r10 r0  0x0190 // r10  = 400  // i
// 001000_00000_01011_0000000000001010   // addi r11 r0  0x000a // r11  = 10  // j
// 001000_00000_01000_0000000000000000   // addi r8  r0  0x0000 // r8  = 0 // i
// 001000_00000_01001_0000000000000000   // addi r9  r0  0x0000 // r9  = 0 // j
// 000000_00000_00000_00000_00000_000000 // nop
// 000000_00000_00000_00000_00000_000000 // nop
// 000000_00000_00000_00000_00000_000000 // nop
// 001000_01001_01001_0000000000000001   // addi r9  r9  0x0001
// 000101_01001_01011_1111111111111011   // bne  r9  r11  
// 001000_01000_01000_0000000000000001   // addi r8  r8  0x0001
// 000101_01000_01010_1111111111111000   // bne  r8  r10 

// 001000_00000_01111_0000000000000001   // addi r15  r0  0x0001 // r15  = 1 // ref
// 001000_00000_10000_0000000000000000   // addi r16 r0  0x0000 // r16 = 0 // a
// 001000_00000_10001_0000000000000001   // addi r17 r0  0x0001 // r17  = 1  // b
// 000101_10000_01111_0000000000000001   // bne  r16 r15  
// 001000_00000_10000_0000000000000010   // addi r16 r0  0x0002 // a = 2
// 000101_10001_01111_0000000000000001   // bne  r17 r15  
// 001000_00000_10001_0000000000000010   // addi r17 r0  0x0002 // b = 2
// 000101_10000_10001_0000000000000010   // bne  r16 r17
// 000000_00000_00000_00000_00000_000000 // nop
// 000000_00000_00000_00000_00000_000000 // nop



////
//000000_00000_00000_00000_00000_000000 // nop
//001000_00000_01010_0000000000011001   // addi r10 r0  0x     // r10  = 25  // i
//001000_00000_01011_0000000000001010   // addi r11 r0  0x000a // r11  = 10  // j
//001000_00000_10000_0000000000000000   // addi r16 r0  0x0000 // r16 = 0 // a
//001000_00000_10001_0000000000000001   // addi r17 r0  0x0001 // r17  = 1  // b
//001000_00000_01000_0000000000000000   // addi r8  r0  0x0000 // r8  = 0 // i
//001000_00000_01001_0000000000000000   // addi r9  r0  0x0000 // r9  = 0 // j
//000000_00000_00000_00000_00000_000000 // nop
////
//001000_00000_01111_0000000000000001   // addi r15 r0  0x0001 // r15  = 1 // ref
//000101_10000_01111_0000000000000001   // bne  r16 r15  
//001000_00000_10000_0000000000000010   // addi r16 r0  0x0002 // a = 2
//000101_10001_01111_0000000000000001   // bne  r17 r15  
//001000_00000_10001_0000000000000010   // addi r17 r0  0x0002 // b = 2
//000101_10000_10001_0000000000000010   // bne  r16 r17
//000000_00000_00000_00000_00000_000000 // nop
//000000_00000_00000_00000_00000_000000 // nop
////
//000000_00000_00000_00000_00000_000000 // nop
//001000_01001_01001_0000000000000001   // addi r9  r9  0x0001
//000000_10000_01111_10000_00000_100111 // nor  r16 r16 r15 // set !a
//000101_01001_01011_1111111111110011   // bne  r9  r11  
//001000_01000_01000_0000000000000001   // addi r8  r8  0x0001
//000101_01000_01010_1111111111110000   // bne  r8  r10 


//
// 000000_00000_00000_00000_00000_000000 // nop
// 001000_00000_01010_0000000110010000   // addi r10 r0  0x0190 // r10  = 400  // i
// 001000_00000_01011_0000000000001010   // addi r11 r0  0x000a // r11  = 10  // j
// 001000_00000_01000_0000000000000000   // addi r8  r0  0x0000 // r8  = 0 // i
// 001000_00000_01001_0000000000000000   // addi r9  r0  0x0000 // r9  = 0 // j
// 000000_00000_00000_00000_00000_000000 // nop
// 000000_00000_00000_00000_00000_000000 // nop
// 000000_00000_00000_00000_00000_000000 // nop
// 001000_01001_01001_0000000000000001   // addi r9  r9  0x0001
// 000101_01001_01011_1111111111111011   // bne  r9  r11  
// 001000_01000_01000_0000000000000001   // addi r8  r8  0x0001
// 000101_01000_01010_1111111111111000   // bne  r8  r10 
//